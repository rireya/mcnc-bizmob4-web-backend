package com.mcnc.sm.hiplus.domain.board.notice.dto.request;

import java.time.LocalDateTime;
import java.util.List;

import javax.validation.constraints.NotBlank;

import org.springframework.format.annotation.DateTimeFormat;

import com.mcnc.bizmob.web.domain.attachFile.dto.AttachFileInfo;
import com.mcnc.bizmob.web.domain.board.notice.dto.NoticeBoardDto;
import com.mcnc.bizmob.web.domain.board.notice.enums.FlagType;

import io.swagger.v3.oas.annotations.media.Schema;
import lombok.AccessLevel;
import lombok.Getter;
import lombok.NoArgsConstructor;

@Getter
@NoArgsConstructor(access = AccessLevel.PROTECTED)
public class UpdateNoticeDocRequest {
	@NotBlank(message = "게시물 ID를 입력해주세요")
	@Schema(description = "수정할 게시물 ID")
	private String noticeDocId;					

	@NotBlank(message = "제목을 입력해주세요")
	@Schema(description = "제목")
	private String title;					
	
	@Schema(description = "삭제할 이미지 파일 ID 목록")
	private List<String> deleteImageFileIds;	
	
	@Schema(description = "내용")
	private String contents;			

	@Schema(description = "첨부이미지 목록")
	private List<AttachFileInfo> imageFiles;
	
	@Schema(description = "서브 카테고리 ID (가장 마지막 깊이의 카테고리)")
	private String subCategoryId;			
	
	@Schema(description = "노출 여부 플래그", defaultValue = "Y", allowableValues = {"Y", "N"})
	private FlagType displayFlag;				
	
	@Schema(description = "상단 고정 여부 플래그", defaultValue = "N", allowableValues = {"Y", "N"})
	private FlagType pinFlag;					

	@Schema(description = "게시 상시 여부 플래그", defaultValue = "N", allowableValues = {"Y", "N"})
	private FlagType pubAlwaysFlag;			
	
	@DateTimeFormat(pattern = "yyyy-MM-dd'T'HH:mm:ss")
	@Schema(description = "게시 상시 일자", example ="yyyy-MM-dd'T'HH:mm:ss" )
	private LocalDateTime pubStartDate;		
	
	@DateTimeFormat(pattern = "yyyy-MM-dd'T'HH:mm:ss")
	@Schema(description = "게시 종료 일자 (상시인 경우 null)", example ="yyyy-MM-dd'T'HH:mm:ss")
	private LocalDateTime pubEndDate;	
	
	
	public NoticeBoardDto toDto() {
		return NoticeBoardDto.builder()
				.noticeDocId(noticeDocId)
				.title(title)
				.contents(contents)
				.subCategoryId(subCategoryId)
				.displayFlag(displayFlag)
				.pinFlag(pinFlag)
				.pubAlwaysFlag(pubAlwaysFlag)
				.pubStartDate(pubStartDate)
				.pubEndDate(pubEndDate)
				.build();
	}
}
