package com.mcnc.bizmob.web.domain.commonCode.controller;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.mcnc.bizmob.web.domain.commonCode.dto.request.DeleteCommonCodeRequest;
import com.mcnc.bizmob.web.domain.commonCode.dto.request.GetBoardCategoryListRequest;
import com.mcnc.bizmob.web.domain.commonCode.dto.request.GetCommonCodeDetailRequest;
import com.mcnc.bizmob.web.domain.commonCode.dto.request.PostLocationRequestDto;
import com.mcnc.bizmob.web.domain.commonCode.dto.request.RegisterCommonCodeRequest;
import com.mcnc.bizmob.web.domain.commonCode.dto.request.UpdateCommonCodeRequest;
import com.mcnc.bizmob.web.domain.commonCode.dto.response.DeleteCommonCodeResponse;
import com.mcnc.bizmob.web.domain.commonCode.dto.response.GetBoardCategoryListResponse;
import com.mcnc.bizmob.web.domain.commonCode.dto.response.GetCommonCodeDetailResponse;
import com.mcnc.bizmob.web.domain.commonCode.dto.response.GetCommonCodeListResponse;
import com.mcnc.bizmob.web.domain.commonCode.dto.response.PostLocationResponseDto;
import com.mcnc.bizmob.web.domain.commonCode.dto.response.RegisterCommonCodeResponse;
import com.mcnc.bizmob.web.domain.commonCode.dto.response.UpdateCommonCodeResponse;
import com.mcnc.sm.hiplus.domain.commonCode.service.CommonCodeService;
import com.mcnc.sm.hiplus.global.dto.response.ApiResponse;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;

@RestController
@RequestMapping("/api/commonCode")
@Tag(name = "[SMADx1xx] 공통 코드 관련", description = "공통 코드와 관련된 기능을 수행합니다.")
public class CommonCodeController {
	
	@Autowired
	private CommonCodeService commonCodeService;
	
	@PostMapping("/list")
    @Operation(summary = "[SMAD0101] 공통코드 관리 목록 조회", description = "공통코드 관리 목록을 조회합니다.")
    public ResponseEntity<ApiResponse<GetCommonCodeListResponse>> getCommonCodeList() {
		ApiResponse<GetCommonCodeListResponse> response = new ApiResponse<>(true, "공통코드 관리 목록을 조회 성공"); 
		
		response.setData(commonCodeService.getCommonCodeList());
		
		return ResponseEntity.ok(response);
    }
	
	@PostMapping("/detail")
    @Operation(summary = "[SMAD0102] 공통코드 상세 정보 조회", description = "공통코드 상세 정보를 조회합니다.")
    public ResponseEntity<ApiResponse<GetCommonCodeDetailResponse>> getCommonCodeDetail(@Valid @RequestBody GetCommonCodeDetailRequest request) {
		ApiResponse<GetCommonCodeDetailResponse> response = new ApiResponse<>(true, "공통코드 상세 정보 조회 성공"); 
		
		response.setData(commonCodeService.getCommonCodeDetail(request));
		
		return ResponseEntity.ok(response);
    }
	
	@PostMapping("/register")
    @Operation(summary = "[SMAD0103] 공통코드 등록", description = "공통코드를 등록합니다.")
    public ResponseEntity<ApiResponse<RegisterCommonCodeResponse>> registerCommonCode(@Valid @RequestBody RegisterCommonCodeRequest request) {
		ApiResponse<RegisterCommonCodeResponse> response = new ApiResponse<>(true, "공통코드 등록 성공"); 
		
		response.setData(commonCodeService.registerCommonCode(request));
		
		return ResponseEntity.ok(response);
    }
	
	@PostMapping("/update")
    @Operation(summary = "[SMAD0104] 공통코드 수정", description = "공통코드를 수정합니다.")
    public ResponseEntity<ApiResponse<UpdateCommonCodeResponse>> updateCommonCode(@Valid @RequestBody UpdateCommonCodeRequest request) {
		ApiResponse<UpdateCommonCodeResponse> response = new ApiResponse<>(true, "공통코드 수정 성공"); 
		
		response.setData(commonCodeService.updateCommonCode(request));
		
		return ResponseEntity.ok(response);
    }
	
	@PostMapping("/delete")
    @Operation(summary = "[SMAD0105] 공통코드 삭제", description = "공통코드를 삭제합니다. (물리적 삭제)")
    public ResponseEntity<ApiResponse<DeleteCommonCodeResponse>> deleteCommonCode(@Valid @RequestBody DeleteCommonCodeRequest request) {
		ApiResponse<DeleteCommonCodeResponse> response = new ApiResponse<>(true, "공통코드 삭제 성공"); 
		
		response.setData(commonCodeService.deleteCommonCode(request));
		
		return ResponseEntity.ok(response);
    }
	
	
	@PostMapping("/list/board/category")
    @Operation(summary = "[SMAD2101] 특정 게시판 카테고리 목록 조회", description = "특정 게시판의 카테고리 목록을 조회합니다.")
    public ResponseEntity<ApiResponse<GetBoardCategoryListResponse>> getCategoryList(@Valid @RequestBody GetBoardCategoryListRequest request) {
		ApiResponse<GetBoardCategoryListResponse> response = new ApiResponse<>(true, "특정 게시판의 카테고리 목록을 조회 성공"); 
		
		response.setData(commonCodeService.getBoardCategoryList(request));
		
		return ResponseEntity.ok(response);
    }
	
	@PostMapping(value = "/postlocation/list")
    @Operation(summary = "[SMAD3101] [게시판 공통] 게시글 위치타입 목록 조회", description = "각 게시글의 랜딩위치 OR 링크위치 리스트 조회")
    public ResponseEntity<ApiResponse<PostLocationResponseDto>> selectPostLocations(@Valid @RequestBody PostLocationRequestDto request) throws Exception {
		
		ApiResponse<PostLocationResponseDto> response = new ApiResponse<>(true, "각 게시글의 랜딩위치 OR 링크위치 리스트 조회 성공"); 
		
		response.setData(commonCodeService.selectPostLocations(request));	
		return ResponseEntity.ok(response);
    }

	

}
