package com.mcnc.bizmob.web.domain.user.controller;


import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.mcnc.sm.hiplus.domain.user.dto.request.UserLoginRequest;
import com.mcnc.sm.hiplus.domain.user.dto.response.UserLoginResponse;
import com.mcnc.sm.hiplus.domain.user.service.UserService;
import com.mcnc.sm.hiplus.global.dto.response.ApiResponse;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;

@RestController
@RequestMapping("/api/user")
@Tag(name = "[SMADxxxx] 사용자(User/관리자) 관련 Controller", description = "사용자(관리자)와 관련된 기능을 수행합니다.")
public class UserController {
	
	@Autowired
	private UserService userService;
	
    @PostMapping("/login")
    @Operation(summary = "[SMAD0001] 사용자 로그인", description = "사용자 로그인")
    public ResponseEntity<ApiResponse<UserLoginResponse>> login(@Valid @RequestBody UserLoginRequest request, HttpServletRequest servletRequest) {
		
    	ApiResponse<UserLoginResponse> response = new ApiResponse<>(true, "사용자 로그인 성공"); 
		response.setData(userService.login(request));
		
		HttpSession session = servletRequest.getSession(true);
	    session.setAttribute("userId", response.getData().getUserId()); 
	    
		return ResponseEntity.ok(response);
    }    
    
    @PostMapping("/logout")
    @Operation(summary = "[SMAD0002] 사용자 로그아웃", description = "사용자 로그아웃")
    public ResponseEntity<ApiResponse<String>> logout(HttpServletRequest request) {
    	
        HttpSession session = request.getSession(false); 
        if (session != null) {
            session.invalidate(); 
        }

        ApiResponse<String> response = new ApiResponse<>(true, "로그아웃 성공");
        return ResponseEntity.ok(response);
    }

    
//    @PostMapping("/login/jwt")
//    @Operation(summary = "사용자 로그인 + JWT 토큰 발급", description = "사용자 로그인 후 인증이 성공하면 JWT 토큰을 발급합니다.")
//    public ResponseEntity<ApiResponse<UserLoginResponse>> loginByJwtToken(@Valid @RequestBody UserLoginRequest request) {
//		ApiResponse<UserLoginResponse> response = new ApiResponse<>(true, "사용자 로그인 성공"); 
//		
//		response.setData(userService.userLoginAndCreateJwtToken(request));
//		
//		return ResponseEntity.ok(response);
//    }
}
